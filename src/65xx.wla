; pling! (c) copyright Kroc Camen 2019-2020. unless otherwise noted,
; licenced under a MIT licence; you may reuse and modify this code
; how you please as long as you retain the copyright notice
;
; 65xx.wla : macros for 6502/6510/65C02
;===============================================================================

; macro to polyfill 65C02's PusH-X instruction
;-------------------------------------------------------------------------------
.MACRO  .phx                                                            ;cycles
        ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
        .IFDEF  CPU_65C02
                phx             ; native to the 65C02                   ;+3
        .ELSE
                txa             ; pass via A register                   ;+2
                pha                                                     ;+3
        .ENDIF
        ;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
.ENDM

; macro to polyfill 65C02's PusH-Y instruction
;-------------------------------------------------------------------------------
.MACRO  .phy                                                            ;cycles
        ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
        .IFDEF  CPU_65C02
                phy             ; native to the 65C02                   ;+3
        .ELSE
                tya             ; pass via A register                   ;+2
                pha                                                     ;+3
        .ENDIF
        ;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
.ENDM

; macro to polyfill 65C02's PulL-X instruction
;-------------------------------------------------------------------------------
.MACRO  .plx                                                            ;cycles
        ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
        .IFDEF  CPU_65C02
                plx             ; native to the 65C02                   ;+3
        .ELSE
                pla             ; pass via A register                   ;+2
                tax                                                     ;+3
        .ENDIF
        ;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
.ENDM

; macro to polyfill 65C02's PulL-Y instruction
;-------------------------------------------------------------------------------
.MACRO  .ply                                                            ;cycles
        ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
        .IFDEF  CPU_65C02
                ply             ; native to the 65C02                   ;+3
        .ELSE
                pla             ; pass via A register                   ;+2
                tay                                                     ;+3
        .ENDIF
        ;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
.ENDM

; macro to polyfill 65C02's STore-Zero instruction
;-------------------------------------------------------------------------------
.MACRO  .stz                                                            ;cycles
        ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
        .IFDEF  CPU_65C02
                stz \1          ; native to the 65C02                   ;+3|4
        .ELSE
                lda # 0         ; load a zero first,                    ;+2
                sta \1          ; and store                             ;+3|4
        .ENDIF
        ;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
.ENDM

;-------------------------------------------------------------------------------
.MACRO  .bit_skip1
        ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
        .BYTE   $24
        ;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
.ENDM

;-------------------------------------------------------------------------------
.MACRO  .bit_skip2
        ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
        .BYTE   $2c
        ;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
.ENDM