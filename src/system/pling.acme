; pling! (c) copyright Kroc Camen 2019-2020. unless otherwise noted,
; licenced under a MIT licence; you may reuse and modify this code
; how you please as long as you retain the copyright notice
;
; constants and macro helpers for the assembler
!source "system/acme.acme"

; import machine-specific headers
;-------------------------------------------------------------------------------
!ifdef  .SYSTEM_C64     !source "system/c64/c64.acme"
!ifdef  .SYSTEM_X16     !source "system/x16/x16.acme"

!ifdef  .CPU_65XX       !source "system/65xx.acme"

; data-types:
;===============================================================================
.TYPE_BYTE      = %00000000
.TYPE_WORD_LO   = %10000000
.TYPE_WORD_HI   = %11000000
.TYPE_FLOAT     = %01000000
.TYPE_FLOAT1    = %01000100
.TYPE_FLOAT2    = %01000011
.TYPE_FLOAT3    = %01000010
.TYPE_FLOAT4    = %01000001
.TYPE_FLOAT5    = %01000000

; set the value of the byte atop of the stack,
; but do *not* advance the stack pointer
;-------------------------------------------------------------------------------
!macro  set .value {
        ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
        lda # .value
        sta pl_stack, x
        ;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
}

; set the data-type for the item atop the stack,
; but do *not* advance the stack pointer
;-------------------------------------------------------------------------------
!macro  set_type .type {
        ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
        lda # .type
        sta pl_type, x
        ;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
}

; push a value on top of the stack, but do not set its data-type,
; or advance the stack pointer. WARNING: problems will arise if
; the data-type stack goes out of alignment!
;-------------------------------------------------------------------------------
!macro  push .value {
        ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
        inx
        +set .value
        ;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
}

;-------------------------------------------------------------------------------
!macro  push_byte .byte {
        ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
        +push .byte             ; push the value on to the stack
        +set_byte               ; set the data-type for the value
        ;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
}

; set the data-type for the item atop the stack to "byte",
; but do *not* advance the stack pointer
;-------------------------------------------------------------------------------
!macro  set_byte {
        ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
        !ifdef .CPU_6502 {
                +set_type .TYPE_BYTE
        }
        !ifdef .CPU_65C02 {
                ; this optimisation breaks if `.TYPE_BYTE` is not 0!
                !if .TYPE_BYTE != 0 !serious ".TYPE_BYTE != 0"
                stz pl_type, x
        }
        ;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
}

;-------------------------------------------------------------------------------
!macro  set_word_lo {
        ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
        +set_type .TYPE_WORD_LO
        ;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
}

;-------------------------------------------------------------------------------
!macro  set_word_hi {
        ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
        +set_type .TYPE_WORD_HI
        ;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
}

;===============================================================================
.IS_IMMEDIATE           = %10000000
.IS_HIDDEN              = %01000000
.IS_NO_TAIL_CALL        = %00100000
.TERMLEN_MASK           = %00011111     ; length of term name is up to 31 chars

!set    .prev_term = 0

;-------------------------------------------------------------------------------
!macro  prevTerm {
        ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
        !word   .prev_term
        !set    .prev_term = * - 2
        ;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
}