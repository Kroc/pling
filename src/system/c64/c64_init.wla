; pling! (c) copyright Kroc Camen 2019-2020. unless otherwise noted,
; licenced under a MIT licence; you may reuse and modify this code
; how you please as long as you retain the copyright notice
;
; c64_init.wla : machine-specific intialisation for the Commodore 64
;===============================================================================
.INC    "system/cbmbasic.wla"

init:
        ;-----------------------------------------------------------------------
        ; reset Pling's stacks
        ;-----------------------------------------------------------------------
        ldy # PL_STACK_SIZE-1
-       lda # $88
        sta zp_stack, y
        lda # TYPE_BYTE
        sta zp_type, y
        dey
        bpl -

        ; the last term to be defined:
        lda #< term_last_term
        sta zp_last+lo
        lda #> term_last_term
        sta zp_last+hi

        ; set the user-space starting address,
        ; where new terms will be compiled
        lda #< begin_here
        sta zp_here+lo
        lda #> begin_here
        sta zp_here+hi

        ; set the default delimiter for the interpreter
        lda # $20               ; TODO: consts for ASCII codes
        sta zp_delimiter

        ; clear the term-name buffer
        lda # 0
        ldy # PL_TERM_LEN
-       sta zp_term_name, y
        dey
        bpl -

        ldx # PL_STACK_SIZE

        ; set up the screen:
        ;-----------------------------------------------------------------------
        lda # VIC_BLACK
        sta VIC_BORDER
        sta VIC_BACKGROUND

.DEF    _str    $0e, $93, $9e
.REDEF  _str    _str, $12, "OK                    USER $4000 HEAP 64", $92
.REDEF  _str    _str, 13, ">!< Pling! by Kroc Camen"
.REDEF  _str    _str, 13,"    <github.com/Kroc/pling>"
.REDEF  _str    _str, 13, "    built: ", WLA_TIME

        ldy # 0
-       lda @ver.w, y
        jsr KERNAL_CHROUT
        iny
        cpy # _str.length
        bne -

        ;-----------------------------------------------------------------------
        lda # 4
        jsr push_byte
        lda #< @test
        ldy #> @test
        jsr push_word

        jsr term_io_chain

-       jmp -

@ver:   .ASC    _str

@test:  .ASC    "test", 0