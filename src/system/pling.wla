; pling! (c) copyright Kroc Camen 2019-2020. unless otherwise noted,
; licenced under a MIT licence; you may reuse and modify this code
; how you please as long as you retain the copyright notice
;
;===============================================================================
; import machine-specific headers:
;-------------------------------------------------------------------------------
.IFDEF  SYSTEM_C64
        .INCLUDE        "system/c64/c64.wla"
.ENDIF
.IFDEF  SYSTEM_X16
        .INCLUDE        "system/x16/x16.wla"
.ENDIF
.IFDEF  CPU_65XX
        .INCLUDE        "system/65xx.wla"
.ENDIF

; data-types:
;===============================================================================
.DEFINE TYPE_BYTE       %00000000
.DEFINE TYPE_WORD_LO    %10000000
.DEFINE TYPE_WORD_HI    %11000000
.DEFINE TYPE_FLOAT      %01000000
.DEFINE TYPE_FLOAT1     %01000100
.DEFINE TYPE_FLOAT2     %01000011
.DEFINE TYPE_FLOAT3     %01000010
.DEFINE TYPE_FLOAT4     %01000001
.DEFINE TYPE_FLOAT5     %01000000

; set the value of the byte atop of the stack,
; but do *not* advance the stack pointer
;-------------------------------------------------------------------------------
.MACRO  .set
        ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
        lda # \1
        sta pl_stack, x
        ;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
.ENDM

; set the data-type for the item atop the stack,
; but do *not* advance the stack pointer
;-------------------------------------------------------------------------------
.MACRO  .set_type
        ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
        lda # \1
        sta pl_type, x
        ;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
.ENDM

; push a value on top of the stack, but do not set its data-type,
; or advance the stack pointer. WARNING: problems will arise if
; the data-type stack goes out of alignment!
;-------------------------------------------------------------------------------
.MACRO  .push
        ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
        inx
        .set \1
        ;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
.ENDM

;-------------------------------------------------------------------------------
.MACRO  .push_byte
        ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
        .push \1                ; push the value on to the stack
        .set_byte               ; set the data-type for the value
        ;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
.ENDM

; set the data-type for the item atop the stack to "byte",
; but do *not* advance the stack pointer
;-------------------------------------------------------------------------------
.MACRO  .set_byte
        ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
        .IFDEF  CPU_6502
                .set_type TYPE_BYTE
        .ENDIF
        .IFDEF  CPU_65C02
                ; this optimisation breaks if `TYPE_BYTE` is not 0!
                .IF TYPE_BYTE != 0
                        .PRINT "TYPE_BYTE != 0"
                        .FAIL
                .ENDIF
                stz pl_type, x
        .ENDIF
        ;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
.ENDM

;-------------------------------------------------------------------------------
.MACRO  .set_word_lo
        ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
        .set_type TYPE_WORD_LO
        ;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
.ENDM

;-------------------------------------------------------------------------------
.MACRO  .set_word_hi
        ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
        .set_type TYPE_WORD_HI
        ;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
.ENDM

;===============================================================================
.DEFINE IS_IMMEDIATE            %10000000
.DEFINE IS_HIDDEN               %01000000
.DEFINE IS_NO_TAIL_CALL         %00100000
.DEFINE TERMLEN_MASK            %00011111       ; term name up to 31 chars

.DEFINE prev_term       0

;-------------------------------------------------------------------------------
.MACRO  .prevTerm
        ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
        .WORD   prev_term
        prev_term = * - 2
        ;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
.ENDM