; pling! (c) copyright Kroc Camen 2019-2020. unless otherwise noted,
; licenced under a MIT licence; you may reuse and modify this code
; how you please as long as you retain the copyright notice
;
;===============================================================================
; import machine-specific headers:
;-------------------------------------------------------------------------------
.DEF    LO              0
.DEF    HI              1

.IFDEF  SYSTEM_C64
        .INC    "c64/c64.wla"
.ENDIF
.IFDEF  CPU_65XX
        ; macros for 6502-based systems (6502, 6510, 65C02)
        ; to polyfill differences in instruction sets 
        .INC    "65xx.wla"
.ENDIF

; data-types:
;===============================================================================
.DEF    TYPE_BYTE       %00000000       ; a data byte, but not a token!
.DEF    TYPE_WORD_LO    %10000000       ; the lo-byte of a word
.DEF    TYPE_WORD_HI    %10000001       ; the hi-byte of a word
; TODO: floats to be considered later
.DEF    TYPE_FLOAT      %11000000
.DEF    TYPE_FLOAT1     %11000100
.DEF    TYPE_FLOAT2     %11000011
.DEF    TYPE_FLOAT3     %11000010
.DEF    TYPE_FLOAT4     %11000001
.DEF    TYPE_FLOAT5     %11000000
.DEF    TYPE_EOD        %00000001       ; "End Of Data" (read / write)

;===============================================================================
.DEF    IMMEDIATE       %10000000
.DEF    HIDDEN          %01000000
.DEF    NO_TAIL_CALL    %00100000
.DEF    TERMLEN_MASK    %00011111       ; term name is up to 31 chars

;-------------------------------------------------------------------------------
.DEF    prev_term       $0000

.MACRO  .term   ARGS    str
        ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
        .WORD   prev_term
        .REDEF  prev_term       CADDR - 2
        .BYTE   str.length, str
        ;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
.ENDM

; shared Pling initialisation:
;===============================================================================
pling_init:
        ;-----------------------------------------------------------------------
        ; reset Pling's stacks
        ;-----------------------------------------------------------------------
        ldy # PL_STACK_SIZE-1
-       lda # $00
        sta zp_stack, y
        lda # TYPE_EOD
        sta zp_type, y
        dey
        bpl -

        ; the last term to be defined:
        lda #< term_last_term
        sta zp_last+LO
        lda #> term_last_term
        sta zp_last+HI

        ; set the user-space starting address,
        ; where new terms will be compiled
        lda #< begin_here
        sta zp_here+LO
        lda #> begin_here
        sta zp_here+HI

        ; set the default delimiter for the interpreter
        lda # ' '
        sta zp_delimiter

        ; clear the term-name buffer
        lda # $00
        ldy # PL_TERM_LEN-1
-       sta zp_term_name, y
        dey
        bpl -

        ldx # PL_STACK_SIZE

        lda # 4
        jsr push_byte
        lda #< @test
        ldy #> @test
        jsr push_word
        jsr term_io_chain

        ; TODO!       
-       jmp -

@test:  .ASC    "test", 0

;===============================================================================
.INC    "stack.wla"
.INC    "error.wla"
.INC    "core.wla"
.INC    "interpret.wla"
.INC    "stream.wla"
.INC    "disk.wla"
;;.INC    "console.wla"

; last-term ( -- w )
;===============================================================================
; pushes the address of the last term defined.
; used by the interpreter to begin the search for term names
;
;-------------------------------------------------------------------------------
        .term   "last-term"

term_last_term:
        ;-----------------------------------------------------------------------
        lda zp_last+LO
        ldy zp_last+HI
        jmp push_word

;===============================================================================
; WARNING: *ANY* code / data placed after this point
; will be overwritten by the compiler!
; 
begin_here: