; Pling! (c) copyright Kroc Camen 2019-2020. unless otherwise noted,
; licenced under a MIT licence; you may reuse and modify this code
; how you please as long as you retain the copyright notice
;
;===============================================================================
; CPU identification:
;
.DEF    CPU_65XX        1       ; a 6502-based CPU;
.DEF    CPU_6502        1       ; similar enough to a 6502 to warrant this
.DEF    CPU_6510        1       ; specifically, the C64 uses a 6510 CPU

; number of rows / columns in text-mode, 1-based.
; (this is defined across different systems to provide
;  standard screen width / height constants)
;
.DEF    SYS_SCREEN_COLS 40
.DEF    SYS_SCREEN_ROWS 25

.INC    "cbm/c64/c64_mem.wla"   ; C64-specific memory addresses
.INC    "cbm/c64/c64_cia.wla"
.INC    "cbm/c64/c64_vic.wla"
.INC    "cbm/c64/c64_kernal.wla"

;===============================================================================
; Pling! memory map:
; (C64 disk version)
;
;  $0 $0800    ?        $4000           $8000            $C000    $E000    $FFFF
;  +--+--------+------------------------+--------------------+----+--------+
;  |  | PLING! | USER CODE              | USER HEAP          | IO | DSKBUF |
;  +--+--------+------------------------+--------------------+----+--------+
;       ^        ^ compiled               ^ program heap            ^ disk
;       runtime    pling code               (moveable)                buffer
;
.DEF    pl_screen       $0400   ; screen-RAM
.DEF    pl_code         $0800   ; user-space starting address
.DEF    pl_heap         $8000   ; user-heap starting address
.DEF    pl_disk         $e000   ; disk-buffer space

; current delimiter between terms
.DEF    pl_delimiter    $033a

; string buffer for parsing term names:
; (the first byte is the length)
.DEF    PL_TERM_LEN     31

.RAMSECTION "PL_TERM"   SLOT $200 ORGA $33b FORCE
        pl_term_len     BYTE
        pl_term_name    DSB PL_TERM_LEN
.ENDS

; number of digits read when parsing numbers;
; used to determine byte/word size from binary/hexadecimal numbers
.DEF    pl_digits       $0339

; active device number (system-dependent);
; this is the same ZP byte used by the KERNAL
; to store the last-used device number
;
.DEF    zp_device       ZP_KERNAL_DEV                               ;=$BA
